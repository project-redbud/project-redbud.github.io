import{_ as e,c as t,o as i,e as s}from"./app-k4uPTofk.js";const a={},n=s(`<p>本文档面向开发者与调用者，详细描述了 FunGame WebAPI 中 <code>Refresh</code> 端口的功能、使用方法、请求与响应格式，以及可能的错误情况。</p><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p><code>Refresh</code> 端口用于刷新用户的 JWT Bearer Token。用户在登录后可以通过此端口获取一个新的 Bearer Token，以延长会话的有效期或在旧 Token 被吊销后重新获取认证凭证。此端口需要用户已登录并提供有效的 Bearer Token 进行身份验证。</p><p><strong>Token 过期时间</strong>：默认情况下，JWT Bearer Token 的有效期为 30 分钟，自生成之时起计算。</p><h2 id="api-请求" tabindex="-1"><a class="header-anchor" href="#api-请求"><span>API 请求</span></a></h2><ul><li><strong>URL</strong>: <code>/user/refresh</code></li><li><strong>HTTP 方法</strong>: <code>POST</code></li><li><strong>认证方案</strong>: Bearer Token（一个有效的 JWT Bearer Token）</li><li><strong>请求体格式</strong>: 无需请求体</li><li><strong>响应体格式</strong>: JSON</li></ul><p>示例：<a href="https://api.redbud.fun/user/refresh/" target="_blank" rel="noopener noreferrer">https://api.redbud.fun/user/refresh/</a></p><h2 id="url-查询参数" tabindex="-1"><a class="header-anchor" href="#url-查询参数"><span>URL 查询参数</span></a></h2><p>无</p><h2 id="请求头" tabindex="-1"><a class="header-anchor" href="#请求头"><span>请求头</span></a></h2><table><thead><tr><th>头字段</th><th>类型</th><th>描述</th><th>示例值</th></tr></thead><tbody><tr><td><code>Authorization</code></td><td>string</td><td>Bearer Token，用于身份验证</td><td><code>&quot;Bearer eyJhbGciOiJIUzI1NiIs...&quot;</code></td></tr></tbody></table><p><strong>注意</strong>：</p><ul><li>请求头中必须包含 <code>Authorization</code> 字段，且格式为 <code>Bearer &lt;token&gt;</code>。</li><li>Token 必须是有效的、未被吊销且未过期的 JWT Bearer Token。默认过期时间为 30 分钟。</li></ul><h2 id="返回结果" tabindex="-1"><a class="header-anchor" href="#返回结果"><span>返回结果</span></a></h2><p>请求成功时（<code>StatusCode</code> = 200）会返回一个新的 JWT Bearer Token 字符串：</p><table><thead><tr><th>类型</th><th>描述</th><th>示例值</th></tr></thead><tbody><tr><td>string</td><td>新的 JWT Bearer Token</td><td><code>&quot;eyJhbGciOiJIUzI1NiIs...&quot;</code></td></tr></tbody></table><h3 id="失败时的返回" tabindex="-1"><a class="header-anchor" href="#失败时的返回"><span>失败时的返回</span></a></h3><p>当请求失败时，返回一个简单的错误消息字符串：</p><table><thead><tr><th>类型</th><th>描述</th><th>示例值</th></tr></thead><tbody><tr><td>string</td><td>错误描述</td><td><code>&quot;服务器暂时无法处理请求。&quot;</code></td></tr></tbody></table><h2 id="响应示例" tabindex="-1"><a class="header-anchor" href="#响应示例"><span>响应示例</span></a></h2><h3 id="刷新成功" tabindex="-1"><a class="header-anchor" href="#刷新成功"><span>刷新成功</span></a></h3><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">eyJhbGciOiJIUzI1NiIs...</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_400-bad-request" tabindex="-1"><a class="header-anchor" href="#_400-bad-request"><span>400 Bad Request</span></a></h3><p>当服务器无法处理请求或用户身份验证失败时返回：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">服务器暂时无法处理请求。</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="可能的错误情况" tabindex="-1"><a class="header-anchor" href="#可能的错误情况"><span>可能的错误情况</span></a></h2><table><thead><tr><th>场景</th><th>响应消息</th><th>HTTP 状态码</th></tr></thead><tbody><tr><td>Bearer Token 无效或已吊销</td><td><code>&quot;此 Token 已吊销，请重新登录以获取 Token。&quot;</code></td><td>401</td></tr><tr><td>未提供 Authorization 头</td><td>无详细消息</td><td>401</td></tr><tr><td>服务器内部错误</td><td><code>&quot;服务器暂时无法处理请求。&quot;</code></td><td>400</td></tr></tbody></table><p><strong>注意</strong>：</p><ul><li>状态码 <code>200</code> 表示成功刷新，返回新的 Bearer Token。</li><li>状态码 <code>401</code> 表示认证失败，通常是由于未提供 Token，也可能是 Token 无效、已过期、已吊销。</li><li>状态码 <code>400</code> 表示服务器无法处理请求，或内部异常。</li></ul><h2 id="使用流程" tabindex="-1"><a class="header-anchor" href="#使用流程"><span>使用流程</span></a></h2><ol><li><strong>准备认证</strong>： <ul><li>确保用户已登录并持有有效的 Bearer Token，且 Token 未超过 30 分钟的有效期。</li></ul></li><li><strong>发送刷新请求</strong>： <ul><li>使用现有的 Bearer Token 在请求头中向 <code>/user/refresh</code> 发送 POST 请求。</li></ul></li><li><strong>处理响应</strong>： <ul><li>若成功，获取新的 Bearer Token 并替换旧 Token 用于后续请求。</li><li>若失败，根据返回的错误消息处理异常。</li></ul></li></ol><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ul><li>刷新操作会吊销旧的 Bearer Token，新 Token 将替代旧 Token 用于认证。</li><li>客户端应妥善保存新 Token，避免泄露。</li><li>若 Token 已过期（超过 30 分钟），需重新登录以获取新 Token。</li></ul><h2 id="代码示例" tabindex="-1"><a class="header-anchor" href="#代码示例"><span>代码示例</span></a></h2><h3 id="curl-请求" tabindex="-1"><a class="header-anchor" href="#curl-请求"><span>cURL 请求</span></a></h3><div class="language-bash line-numbers-mode" data-ext="bash" data-title="bash"><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">curl</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -X</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> POST</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://api.redbud.fun/user/refresh</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">-H </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Authorization: Bearer eyJhbGciOiJIUzI1NiIs...</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> \\</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">-H </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Content-Type: application/json</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,36),l=[n];function r(d,h){return i(),t("div",null,l)}const c=e(a,[["render",r],["__file","index.html.vue"]]),p=JSON.parse(`{"path":"/api/user/refresh/","title":"刷新令牌","lang":"en-US","frontmatter":{"title":"刷新令牌","author":"Project Redbud","createTime":"2025/03/23 19:35:36","permalink":"/api/user/refresh/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"API 请求","slug":"api-请求","link":"#api-请求","children":[]},{"level":2,"title":"URL 查询参数","slug":"url-查询参数","link":"#url-查询参数","children":[]},{"level":2,"title":"请求头","slug":"请求头","link":"#请求头","children":[]},{"level":2,"title":"返回结果","slug":"返回结果","link":"#返回结果","children":[{"level":3,"title":"失败时的返回","slug":"失败时的返回","link":"#失败时的返回","children":[]}]},{"level":2,"title":"响应示例","slug":"响应示例","link":"#响应示例","children":[{"level":3,"title":"刷新成功","slug":"刷新成功","link":"#刷新成功","children":[]},{"level":3,"title":"400 Bad Request","slug":"_400-bad-request","link":"#_400-bad-request","children":[]}]},{"level":2,"title":"可能的错误情况","slug":"可能的错误情况","link":"#可能的错误情况","children":[]},{"level":2,"title":"使用流程","slug":"使用流程","link":"#使用流程","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":2,"title":"代码示例","slug":"代码示例","link":"#代码示例","children":[{"level":3,"title":"cURL 请求","slug":"curl-请求","link":"#curl-请求","children":[]}]}],"readingTime":{"minutes":2.52,"words":757},"git":{"updatedTime":1742734543000,"contributors":[{"name":"milimoe","email":"mili@wrss.org","commits":1}]},"filePathRelative":"api/user/refresh.md","categoryList":[{"id":"8a5da5","sort":10004,"name":"api"},{"id":"6f8393","sort":10005,"name":"user"}]}`);export{c as comp,p as data};
